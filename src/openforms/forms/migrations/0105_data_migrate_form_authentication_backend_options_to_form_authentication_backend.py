# Generated by Django 4.2.20 on 2025-04-23 10:01

import itertools

from django.db import migrations
from django.db.migrations.state import StateApps


def transform_form_authentication_backends_and_options_to_form_authentication_backend(
    apps: StateApps, _
):
    Form = apps.get_model("forms", "Form")
    FormAuthenticationBackend = apps.get_model("forms", "FormAuthenticationBackend")

    form_authentication_backends_to_create = []
    forms_to_update = []
    forms_with_authentication_backends_or_options = Form.objects.exclude(
        authentication_backend_options={}, authentication_backends=[]
    ).iterator()

    for form in forms_with_authentication_backends_or_options:
        plugins = form.authentication_backends
        config = form.authentication_backend_options

        # Collect all authentication_backends and authentication_backend_options in one list
        form_auths_to_create = {}
        for plugin in plugins:
            form_auths_to_create[plugin] = {}
        for plugin, options in config.items():
            form_auths_to_create[plugin] = options

        for plugin, options in form_auths_to_create.items():
            # Only create a FormAuthenticationBackend if it doesn't exist already
            if not FormAuthenticationBackend.objects.filter(
                form=form, backend=plugin
            ).exists():
                form_authentication_backends_to_create.append(
                    FormAuthenticationBackend(
                        form=form, backend=plugin, options=options
                    )
                )

        forms_to_update.append(form)

    FormAuthenticationBackend.objects.bulk_create(
        form_authentication_backends_to_create
    )
    Form.objects.bulk_update(
        forms_to_update,
        fields=["authentication_backends", "authentication_backend_options"],
    )


def reverse_form_authentication_backend_back_to_form_authentication_backends_and_options(
    apps: StateApps, _
):
    Form = apps.get_model("forms", "Form")
    FormAuthenticationBackend = apps.get_model("forms", "FormAuthenticationBackend")

    forms_to_update = []
    form_authentication_backends = FormAuthenticationBackend.objects.order_by(
        "form_id"
    ).iterator()

    authentication_backends_by_form = itertools.groupby(
        form_authentication_backends, key=lambda auth_backend: auth_backend.form_id
    )

    for form_id, authentication_backends in authentication_backends_by_form:
        form = Form.objects.get(pk=form_id)

        for authentication_backend in authentication_backends:
            plugin_id = authentication_backend.backend
            form.authentication_backends.append(plugin_id)
            form.authentication_backend_options[plugin_id] = (
                authentication_backend.options
            )
        forms_to_update.append(form)

    Form.objects.bulk_update(
        forms_to_update,
        fields=["authentication_backends", "authentication_backend_options"],
    )


class Migration(migrations.Migration):
    dependencies = [
        ("forms", "0104_formauthenticationbackend"),
    ]

    operations = [
        migrations.RunPython(
            transform_form_authentication_backends_and_options_to_form_authentication_backend,
            reverse_form_authentication_backend_back_to_form_authentication_backends_and_options,
        ),
    ]
