# Generated by Django 4.2.16 on 2024-12-05 15:26

import functools

from django.db import migrations

import tinymce.models

import openforms.config.models.config
import openforms.emails.validators
import openforms.template.validators


class Migration(migrations.Migration):

    dependencies = [
        (
            "config",
            "0067_globalconfiguration_cosign_confirmation_email_content_and_more",
        ),
    ]

    operations = [
        migrations.AlterField(
            model_name="globalconfiguration",
            name="cosign_request_template",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.config.models.config._render,
                    *("emails/co_sign/request.html",),
                    **{}
                ),
                help_text="Content of the co-sign request email. The available template variables are: 'form_name', 'submission_date', 'form_url' and 'code'.",
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(
                        backend="openforms.template.openforms_backend"
                    ),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="co-sign request template",
            ),
        ),
        migrations.AlterField(
            model_name="globalconfiguration",
            name="cosign_request_template_en",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.config.models.config._render,
                    *("emails/co_sign/request.html",),
                    **{}
                ),
                help_text="Content of the co-sign request email. The available template variables are: 'form_name', 'submission_date', 'form_url' and 'code'.",
                null=True,
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(
                        backend="openforms.template.openforms_backend"
                    ),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="co-sign request template",
            ),
        ),
        migrations.AlterField(
            model_name="globalconfiguration",
            name="cosign_request_template_nl",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.config.models.config._render,
                    *("emails/co_sign/request.html",),
                    **{}
                ),
                help_text="Content of the co-sign request email. The available template variables are: 'form_name', 'submission_date', 'form_url' and 'code'.",
                null=True,
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(
                        backend="openforms.template.openforms_backend"
                    ),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="co-sign request template",
            ),
        ),
    ]
